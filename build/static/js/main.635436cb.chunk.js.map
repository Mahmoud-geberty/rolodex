{"version":3,"sources":["components/card/card.component.jsx","components/card-list/card-list.component.jsx","components/search/search.component.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","alt","src","monster","name","email","CardList","cards","search","length","map","e","id","Search","handleChange","type","placeholder","place","onChange","App","setState","searchField","target","value","state","monsters","fetch","then","res","json","data","catch","err","console","log","this","filter","toLowerCase","includes","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mUAGaA,EAAO,SAACC,GACnB,OACE,sBAAKC,UAAU,iBAAf,UACE,qBAAKC,IAAI,UAAUC,IAAG,+BAA0BH,EAAMI,QAAQC,KAAxC,4BACtB,mCAAML,EAAMI,QAAQC,KAApB,OACA,mCAAML,EAAMI,QAAQE,MAApB,WCJOC,G,MAAW,SAAC,GAAsB,IAApBC,EAAmB,EAAnBA,MAAOC,EAAY,EAAZA,OAEhC,OAAID,EAAME,OAEN,qBAAKT,UAAU,YAAf,SACGO,EAAMG,KAAI,SAACC,GAAD,OACT,cAAC,EAAD,CAAiBR,QAASQ,GAAfA,EAAEC,SAKZ,mCAAMJ,EAAN,gDCZEK,G,MAAS,SAACd,GACrB,IAAIe,EAAef,EAAMe,aACzB,OACE,uBACEd,UAAU,SACVe,KAAK,SACLC,YAAajB,EAAMkB,MACnBC,SAAUJ,MCgCDK,E,kDAnCb,WAAYpB,GAAQ,IAAD,8BACjB,cAAMA,IAORe,aAAe,SAACH,GACd,EAAKS,SAAS,CAAEC,YAAaV,EAAEW,OAAOC,SAPtC,EAAKC,MAAQ,CACXC,SAAU,GACVJ,YAAa,IAJE,E,qDAYnB,WAAqB,IAAD,OAClBK,MAAM,8CACHC,MAAK,SAACC,GAAD,OAASA,EAAIC,UAClBF,MAAK,SAACG,GAAD,OAAU,EAAKV,SAAS,CAAEK,SAAUK,OACzCC,OAAM,SAACC,GAAD,OAASC,QAAQC,IAAIF,Q,oBAGhC,WACE,IAAIP,EAAWU,KAAKX,MAAMC,SACtBjB,EAAS2B,KAAKX,MAAMH,YACpBd,EAAQkB,EAASW,QAAO,SAACzB,GAAD,OAC1BA,EAAEP,KAAKiC,cAAcC,SAAS9B,EAAO6B,kBAEvC,OACE,sBAAKrC,UAAU,MAAf,UACE,iDACA,cAAC,EAAD,CAAQc,aAAcqB,KAAKrB,aAAcG,MAAO,kBAChD,cAAC,EAAD,CAAUV,MAAOA,EAAOC,OAAQ2B,KAAKX,MAAMH,qB,GA9BjCkB,aCMHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBf,MAAK,YAAkD,IAA/CgB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.635436cb.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./card.style.css\";\r\n\r\nexport const Card = (props) => {\r\n  return (\r\n    <div className=\"card-container\">\r\n      <img alt=\"monster\" src={`https://robohash.org/${props.monster.name}?set=set2&size=180x180`} />\r\n      <h2> {props.monster.name} </h2>\r\n      <h2> {props.monster.email} </h2>\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { Card } from \"../card/card.component.jsx\";\r\nimport \"./card-list.style.css\";\r\n\r\nexport const CardList = ({ cards, search}) => {\r\n\r\n  if (cards.length) {\r\n    return (\r\n      <div className=\"card-list\">\r\n        {cards.map((e) => (\r\n          <Card key={e.id} monster={e} />\r\n        ))}\r\n      </div>\r\n    );\r\n  } else {\r\n    return <h1>'{search}' was not Found, try another search term</h1>;\r\n  }\r\n};\r\n","import React from \"react\";\r\nimport \"./search.style.css\"\r\n\r\nexport const Search = (props) => {\r\n  let handleChange = props.handleChange;\r\n  return (\r\n    <input\r\n      className=\"search\"\r\n      type=\"search\"\r\n      placeholder={props.place}\r\n      onChange={handleChange}\r\n    />\r\n  );\r\n};\r\n","// import logo from \"./logo.svg\";\nimport \"./App.css\";\nimport { Component } from \"react\";\nimport { CardList } from \"./components/card-list/card-list.component.jsx\";\nimport { Search } from \"./components/search/search.component.jsx\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      monsters: [],\n      searchField: \"\",\n    };\n  }\n\n  handleChange = (e) => {\n    this.setState({ searchField: e.target.value });\n  };\n\n  componentDidMount() {\n    fetch(\"https://jsonplaceholder.typicode.com/users\")\n      .then((res) => res.json())\n      .then((data) => this.setState({ monsters: data }))\n      .catch((err) => console.log(err));\n  }\n\n  render() {\n    let monsters = this.state.monsters;\n    let search = this.state.searchField;\n    let cards = monsters.filter((e) =>\n      e.name.toLowerCase().includes(search.toLowerCase())\n    );\n    return (\n      <div className=\"App\">\n        <h1> Robots Rolodex</h1>\n        <Search handleChange={this.handleChange} place={\"Search Robots\"} />\n        <CardList cards={cards} search={this.state.searchField} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}